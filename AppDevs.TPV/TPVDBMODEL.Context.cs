//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppDevs.TPV
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TPVDBEntities : DbContext
    {
        public TPVDBEntities()
            : base("name=TPVDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Areas> Areas { get; set; }
        public virtual DbSet<CategoriasProductos> CategoriasProductos { get; set; }
        public virtual DbSet<EstadosOrden> EstadosOrden { get; set; }
        public virtual DbSet<EstadosOrdenDetalle> EstadosOrdenDetalle { get; set; }
        public virtual DbSet<InformacionEmpresa> InformacionEmpresa { get; set; }
        public virtual DbSet<Mesas> Mesas { get; set; }
        public virtual DbSet<Metodos_Pago> Metodos_Pago { get; set; }
        public virtual DbSet<Ordenes> Ordenes { get; set; }
        public virtual DbSet<OrdenesDetalles> OrdenesDetalles { get; set; }
        public virtual DbSet<Perfiles> Perfiles { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<PermisosPerfiles> PermisosPerfiles { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<ProductosUnidadesMedidas> ProductosUnidadesMedidas { get; set; }
        public virtual DbSet<TiposProductos> TiposProductos { get; set; }
        public virtual DbSet<UnidadesMedidas> UnidadesMedidas { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<VW_NUMEROFACTURAANUAL> VW_NUMEROFACTURAANUAL { get; set; }
    
        public virtual ObjectResult<SPC_GET_AREA_Result> SPC_GET_AREA(Nullable<int> codigo_Area, string area, string color_Area, Nullable<bool> activo)
        {
            var codigo_AreaParameter = codigo_Area.HasValue ?
                new ObjectParameter("Codigo_Area", codigo_Area) :
                new ObjectParameter("Codigo_Area", typeof(int));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var color_AreaParameter = color_Area != null ?
                new ObjectParameter("Color_Area", color_Area) :
                new ObjectParameter("Color_Area", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_AREA_Result>("SPC_GET_AREA", codigo_AreaParameter, areaParameter, color_AreaParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_CATEGORIA_Result> SPC_GET_CATEGORIA(Nullable<int> codigo_Categoria_Producto, Nullable<int> codigo_Categoria_Padre_Producto, string categoria_Producto, Nullable<bool> activo)
        {
            var codigo_Categoria_ProductoParameter = codigo_Categoria_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Producto", codigo_Categoria_Producto) :
                new ObjectParameter("Codigo_Categoria_Producto", typeof(int));
    
            var codigo_Categoria_Padre_ProductoParameter = codigo_Categoria_Padre_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Padre_Producto", codigo_Categoria_Padre_Producto) :
                new ObjectParameter("Codigo_Categoria_Padre_Producto", typeof(int));
    
            var categoria_ProductoParameter = categoria_Producto != null ?
                new ObjectParameter("Categoria_Producto", categoria_Producto) :
                new ObjectParameter("Categoria_Producto", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_CATEGORIA_Result>("SPC_GET_CATEGORIA", codigo_Categoria_ProductoParameter, codigo_Categoria_Padre_ProductoParameter, categoria_ProductoParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_DATOSCONSULTA_Result> SPC_GET_DATOSCONSULTA(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_DATOSCONSULTA_Result>("SPC_GET_DATOSCONSULTA", desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<SPC_GET_MESA_Result> SPC_GET_MESA(Nullable<int> codigo_Mesa, string mesa, Nullable<int> codigo_Area, string color_Mesa, string posicionX, string posicionY, string @base, string altura, Nullable<bool> activo)
        {
            var codigo_MesaParameter = codigo_Mesa.HasValue ?
                new ObjectParameter("Codigo_Mesa", codigo_Mesa) :
                new ObjectParameter("Codigo_Mesa", typeof(int));
    
            var mesaParameter = mesa != null ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(string));
    
            var codigo_AreaParameter = codigo_Area.HasValue ?
                new ObjectParameter("Codigo_Area", codigo_Area) :
                new ObjectParameter("Codigo_Area", typeof(int));
    
            var color_MesaParameter = color_Mesa != null ?
                new ObjectParameter("Color_Mesa", color_Mesa) :
                new ObjectParameter("Color_Mesa", typeof(string));
    
            var posicionXParameter = posicionX != null ?
                new ObjectParameter("PosicionX", posicionX) :
                new ObjectParameter("PosicionX", typeof(string));
    
            var posicionYParameter = posicionY != null ?
                new ObjectParameter("PosicionY", posicionY) :
                new ObjectParameter("PosicionY", typeof(string));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var alturaParameter = altura != null ?
                new ObjectParameter("Altura", altura) :
                new ObjectParameter("Altura", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_MESA_Result>("SPC_GET_MESA", codigo_MesaParameter, mesaParameter, codigo_AreaParameter, color_MesaParameter, posicionXParameter, posicionYParameter, baseParameter, alturaParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_ORDENDETALLE_Result> SPC_GET_ORDENDETALLE(Nullable<int> codigo_Orden, Nullable<int> codigo_Mesa, Nullable<int> codigo_Estado_Orden, Nullable<int> codigo_Orden_Detalle, Nullable<int> codigo_Producto, Nullable<int> codigo_Producto_Unidad_Medida, Nullable<int> codigo_Estado_Orden_Detalle, Nullable<int> codigo_Usuario, Nullable<bool> activo)
        {
            var codigo_OrdenParameter = codigo_Orden.HasValue ?
                new ObjectParameter("Codigo_Orden", codigo_Orden) :
                new ObjectParameter("Codigo_Orden", typeof(int));
    
            var codigo_MesaParameter = codigo_Mesa.HasValue ?
                new ObjectParameter("Codigo_Mesa", codigo_Mesa) :
                new ObjectParameter("Codigo_Mesa", typeof(int));
    
            var codigo_Estado_OrdenParameter = codigo_Estado_Orden.HasValue ?
                new ObjectParameter("Codigo_Estado_Orden", codigo_Estado_Orden) :
                new ObjectParameter("Codigo_Estado_Orden", typeof(int));
    
            var codigo_Orden_DetalleParameter = codigo_Orden_Detalle.HasValue ?
                new ObjectParameter("Codigo_Orden_Detalle", codigo_Orden_Detalle) :
                new ObjectParameter("Codigo_Orden_Detalle", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_Producto_Unidad_MedidaParameter = codigo_Producto_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Producto_Unidad_Medida", codigo_Producto_Unidad_Medida) :
                new ObjectParameter("Codigo_Producto_Unidad_Medida", typeof(int));
    
            var codigo_Estado_Orden_DetalleParameter = codigo_Estado_Orden_Detalle.HasValue ?
                new ObjectParameter("Codigo_Estado_Orden_Detalle", codigo_Estado_Orden_Detalle) :
                new ObjectParameter("Codigo_Estado_Orden_Detalle", typeof(int));
    
            var codigo_UsuarioParameter = codigo_Usuario.HasValue ?
                new ObjectParameter("Codigo_Usuario", codigo_Usuario) :
                new ObjectParameter("Codigo_Usuario", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_ORDENDETALLE_Result>("SPC_GET_ORDENDETALLE", codigo_OrdenParameter, codigo_MesaParameter, codigo_Estado_OrdenParameter, codigo_Orden_DetalleParameter, codigo_ProductoParameter, codigo_Producto_Unidad_MedidaParameter, codigo_Estado_Orden_DetalleParameter, codigo_UsuarioParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_PERFIL_Result> SPC_GET_PERFIL(Nullable<int> codigo_Perfil, string perfil, Nullable<bool> activo)
        {
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PERFIL_Result>("SPC_GET_PERFIL", codigo_PerfilParameter, perfilParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_PERMISO_Result> SPC_GET_PERMISO(Nullable<int> codigo_Permiso, string permiso, Nullable<bool> activo)
        {
            var codigo_PermisoParameter = codigo_Permiso.HasValue ?
                new ObjectParameter("Codigo_Permiso", codigo_Permiso) :
                new ObjectParameter("Codigo_Permiso", typeof(int));
    
            var permisoParameter = permiso != null ?
                new ObjectParameter("Permiso", permiso) :
                new ObjectParameter("Permiso", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PERMISO_Result>("SPC_GET_PERMISO", codigo_PermisoParameter, permisoParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_PERMISOSPERFILES_Result> SPC_GET_PERMISOSPERFILES(Nullable<int> codigo_Perfil_Permiso, Nullable<int> codigo_Perfil, Nullable<int> codigo_Permiso)
        {
            var codigo_Perfil_PermisoParameter = codigo_Perfil_Permiso.HasValue ?
                new ObjectParameter("Codigo_Perfil_Permiso", codigo_Perfil_Permiso) :
                new ObjectParameter("Codigo_Perfil_Permiso", typeof(int));
    
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var codigo_PermisoParameter = codigo_Permiso.HasValue ?
                new ObjectParameter("Codigo_Permiso", codigo_Permiso) :
                new ObjectParameter("Codigo_Permiso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PERMISOSPERFILES_Result>("SPC_GET_PERMISOSPERFILES", codigo_Perfil_PermisoParameter, codigo_PerfilParameter, codigo_PermisoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_PRODUCTO_Result> SPC_GET_PRODUCTO(Nullable<int> codigo_Producto, Nullable<int> codigo_Categoria_Producto, string producto, Nullable<int> codigo_Tipo_Producto, Nullable<bool> aceptaExtra, Nullable<bool> activo)
        {
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_Categoria_ProductoParameter = codigo_Categoria_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Producto", codigo_Categoria_Producto) :
                new ObjectParameter("Codigo_Categoria_Producto", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var codigo_Tipo_ProductoParameter = codigo_Tipo_Producto.HasValue ?
                new ObjectParameter("Codigo_Tipo_Producto", codigo_Tipo_Producto) :
                new ObjectParameter("Codigo_Tipo_Producto", typeof(int));
    
            var aceptaExtraParameter = aceptaExtra.HasValue ?
                new ObjectParameter("AceptaExtra", aceptaExtra) :
                new ObjectParameter("AceptaExtra", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PRODUCTO_Result>("SPC_GET_PRODUCTO", codigo_ProductoParameter, codigo_Categoria_ProductoParameter, productoParameter, codigo_Tipo_ProductoParameter, aceptaExtraParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_PRODUCTOSUNIDADESMEDIDAS_Result> SPC_GET_PRODUCTOSUNIDADESMEDIDAS(Nullable<int> codigo_Producto_Unidad_Medida, Nullable<int> codigo_Producto, string nombre_Producto, Nullable<int> codigo_Unidad_Medida, Nullable<decimal> precio_Venta, Nullable<bool> activo)
        {
            var codigo_Producto_Unidad_MedidaParameter = codigo_Producto_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Producto_Unidad_Medida", codigo_Producto_Unidad_Medida) :
                new ObjectParameter("Codigo_Producto_Unidad_Medida", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var nombre_ProductoParameter = nombre_Producto != null ?
                new ObjectParameter("Nombre_Producto", nombre_Producto) :
                new ObjectParameter("Nombre_Producto", typeof(string));
    
            var codigo_Unidad_MedidaParameter = codigo_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Unidad_Medida", codigo_Unidad_Medida) :
                new ObjectParameter("Codigo_Unidad_Medida", typeof(int));
    
            var precio_VentaParameter = precio_Venta.HasValue ?
                new ObjectParameter("Precio_Venta", precio_Venta) :
                new ObjectParameter("Precio_Venta", typeof(decimal));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_PRODUCTOSUNIDADESMEDIDAS_Result>("SPC_GET_PRODUCTOSUNIDADESMEDIDAS", codigo_Producto_Unidad_MedidaParameter, codigo_ProductoParameter, nombre_ProductoParameter, codigo_Unidad_MedidaParameter, precio_VentaParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_TIPOPRODUCTO_Result> SPC_GET_TIPOPRODUCTO(Nullable<int> codigo_Tipo_Producto, string tipo_Producto, Nullable<bool> activo)
        {
            var codigo_Tipo_ProductoParameter = codigo_Tipo_Producto.HasValue ?
                new ObjectParameter("Codigo_Tipo_Producto", codigo_Tipo_Producto) :
                new ObjectParameter("Codigo_Tipo_Producto", typeof(int));
    
            var tipo_ProductoParameter = tipo_Producto != null ?
                new ObjectParameter("Tipo_Producto", tipo_Producto) :
                new ObjectParameter("Tipo_Producto", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_TIPOPRODUCTO_Result>("SPC_GET_TIPOPRODUCTO", codigo_Tipo_ProductoParameter, tipo_ProductoParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_TOPVENTAS_Result> SPC_GET_TOPVENTAS(string excluirCategorias, Nullable<bool> cocina, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var excluirCategoriasParameter = excluirCategorias != null ?
                new ObjectParameter("ExcluirCategorias", excluirCategorias) :
                new ObjectParameter("ExcluirCategorias", typeof(string));
    
            var cocinaParameter = cocina.HasValue ?
                new ObjectParameter("Cocina", cocina) :
                new ObjectParameter("Cocina", typeof(bool));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_TOPVENTAS_Result>("SPC_GET_TOPVENTAS", excluirCategoriasParameter, cocinaParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<SPC_GET_UNIDADESMEDIDAS_Result> SPC_GET_UNIDADESMEDIDAS(Nullable<int> codigo_Unidad_Medida, string unidad_Medida, string abreviatura, Nullable<bool> activo)
        {
            var codigo_Unidad_MedidaParameter = codigo_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Unidad_Medida", codigo_Unidad_Medida) :
                new ObjectParameter("Codigo_Unidad_Medida", typeof(int));
    
            var unidad_MedidaParameter = unidad_Medida != null ?
                new ObjectParameter("Unidad_Medida", unidad_Medida) :
                new ObjectParameter("Unidad_Medida", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_UNIDADESMEDIDAS_Result>("SPC_GET_UNIDADESMEDIDAS", codigo_Unidad_MedidaParameter, unidad_MedidaParameter, abreviaturaParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_GET_USUARIO_Result> SPC_GET_USUARIO(Nullable<int> codigo_Usuario, Nullable<int> codigo_Perfil, string usuario, string clave, string nombre_Usuario, string apellido_Usuario, Nullable<bool> activo)
        {
            var codigo_UsuarioParameter = codigo_Usuario.HasValue ?
                new ObjectParameter("Codigo_Usuario", codigo_Usuario) :
                new ObjectParameter("Codigo_Usuario", typeof(int));
    
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var apellido_UsuarioParameter = apellido_Usuario != null ?
                new ObjectParameter("Apellido_Usuario", apellido_Usuario) :
                new ObjectParameter("Apellido_Usuario", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_USUARIO_Result>("SPC_GET_USUARIO", codigo_UsuarioParameter, codigo_PerfilParameter, usuarioParameter, claveParameter, nombre_UsuarioParameter, apellido_UsuarioParameter, activoParameter);
        }
    
        public virtual int SPC_SET_AREA(Nullable<int> codigo_Area, string area, string color_Area, Nullable<int> orden, Nullable<bool> activo)
        {
            var codigo_AreaParameter = codigo_Area.HasValue ?
                new ObjectParameter("Codigo_Area", codigo_Area) :
                new ObjectParameter("Codigo_Area", typeof(int));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            var color_AreaParameter = color_Area != null ?
                new ObjectParameter("Color_Area", color_Area) :
                new ObjectParameter("Color_Area", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_AREA", codigo_AreaParameter, areaParameter, color_AreaParameter, ordenParameter, activoParameter);
        }
    
        public virtual int SPC_SET_CATEGORIA(Nullable<int> codigo_Categoria_Producto, Nullable<int> codigo_Categoria_Padre_Producto, string categoria_Producto, Nullable<int> orden, Nullable<bool> activo)
        {
            var codigo_Categoria_ProductoParameter = codigo_Categoria_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Producto", codigo_Categoria_Producto) :
                new ObjectParameter("Codigo_Categoria_Producto", typeof(int));
    
            var codigo_Categoria_Padre_ProductoParameter = codigo_Categoria_Padre_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Padre_Producto", codigo_Categoria_Padre_Producto) :
                new ObjectParameter("Codigo_Categoria_Padre_Producto", typeof(int));
    
            var categoria_ProductoParameter = categoria_Producto != null ?
                new ObjectParameter("Categoria_Producto", categoria_Producto) :
                new ObjectParameter("Categoria_Producto", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_CATEGORIA", codigo_Categoria_ProductoParameter, codigo_Categoria_Padre_ProductoParameter, categoria_ProductoParameter, ordenParameter, activoParameter);
        }
    
        public virtual int SPC_SET_MESA(Nullable<int> codigo_Mesa, string mesa, Nullable<int> codigo_Area, string color_Mesa, string posicionX, string posicionY, string @base, string altura, Nullable<bool> activo)
        {
            var codigo_MesaParameter = codigo_Mesa.HasValue ?
                new ObjectParameter("Codigo_Mesa", codigo_Mesa) :
                new ObjectParameter("Codigo_Mesa", typeof(int));
    
            var mesaParameter = mesa != null ?
                new ObjectParameter("Mesa", mesa) :
                new ObjectParameter("Mesa", typeof(string));
    
            var codigo_AreaParameter = codigo_Area.HasValue ?
                new ObjectParameter("Codigo_Area", codigo_Area) :
                new ObjectParameter("Codigo_Area", typeof(int));
    
            var color_MesaParameter = color_Mesa != null ?
                new ObjectParameter("Color_Mesa", color_Mesa) :
                new ObjectParameter("Color_Mesa", typeof(string));
    
            var posicionXParameter = posicionX != null ?
                new ObjectParameter("PosicionX", posicionX) :
                new ObjectParameter("PosicionX", typeof(string));
    
            var posicionYParameter = posicionY != null ?
                new ObjectParameter("PosicionY", posicionY) :
                new ObjectParameter("PosicionY", typeof(string));
    
            var baseParameter = @base != null ?
                new ObjectParameter("Base", @base) :
                new ObjectParameter("Base", typeof(string));
    
            var alturaParameter = altura != null ?
                new ObjectParameter("Altura", altura) :
                new ObjectParameter("Altura", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_MESA", codigo_MesaParameter, mesaParameter, codigo_AreaParameter, color_MesaParameter, posicionXParameter, posicionYParameter, baseParameter, alturaParameter, activoParameter);
        }
    
        public virtual int SPC_SET_ORDEN(ObjectParameter codigo_Orden, Nullable<int> codigo_Mesa, Nullable<int> comensales, Nullable<System.DateTime> hora_Orden, Nullable<int> codigo_Estado_Orden, Nullable<bool> activo)
        {
            var codigo_MesaParameter = codigo_Mesa.HasValue ?
                new ObjectParameter("Codigo_Mesa", codigo_Mesa) :
                new ObjectParameter("Codigo_Mesa", typeof(int));
    
            var comensalesParameter = comensales.HasValue ?
                new ObjectParameter("Comensales", comensales) :
                new ObjectParameter("Comensales", typeof(int));
    
            var hora_OrdenParameter = hora_Orden.HasValue ?
                new ObjectParameter("Hora_Orden", hora_Orden) :
                new ObjectParameter("Hora_Orden", typeof(System.DateTime));
    
            var codigo_Estado_OrdenParameter = codigo_Estado_Orden.HasValue ?
                new ObjectParameter("Codigo_Estado_Orden", codigo_Estado_Orden) :
                new ObjectParameter("Codigo_Estado_Orden", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_ORDEN", codigo_Orden, codigo_MesaParameter, comensalesParameter, hora_OrdenParameter, codigo_Estado_OrdenParameter, activoParameter);
        }
    
        public virtual ObjectResult<SPC_SET_ORDENDETALLE_Result> SPC_SET_ORDENDETALLE(Nullable<int> codigo_Orden_Detalle, Nullable<int> codigo_Orden, Nullable<int> codigo_Producto, Nullable<int> codigo_Producto_Unidad_Medida, Nullable<int> cantidad_Producto, Nullable<int> codigo_Producto_Extra, Nullable<decimal> sub_Total_Precio_Producto, Nullable<int> cantidad_Personas, string nota_Producto, Nullable<System.DateTime> hora_Orden_Detalle, Nullable<int> codigo_Estado_Orden_Detalle, Nullable<int> codigo_Usuario, Nullable<bool> activo)
        {
            var codigo_Orden_DetalleParameter = codigo_Orden_Detalle.HasValue ?
                new ObjectParameter("Codigo_Orden_Detalle", codigo_Orden_Detalle) :
                new ObjectParameter("Codigo_Orden_Detalle", typeof(int));
    
            var codigo_OrdenParameter = codigo_Orden.HasValue ?
                new ObjectParameter("Codigo_Orden", codigo_Orden) :
                new ObjectParameter("Codigo_Orden", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_Producto_Unidad_MedidaParameter = codigo_Producto_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Producto_Unidad_Medida", codigo_Producto_Unidad_Medida) :
                new ObjectParameter("Codigo_Producto_Unidad_Medida", typeof(int));
    
            var cantidad_ProductoParameter = cantidad_Producto.HasValue ?
                new ObjectParameter("Cantidad_Producto", cantidad_Producto) :
                new ObjectParameter("Cantidad_Producto", typeof(int));
    
            var codigo_Producto_ExtraParameter = codigo_Producto_Extra.HasValue ?
                new ObjectParameter("Codigo_Producto_Extra", codigo_Producto_Extra) :
                new ObjectParameter("Codigo_Producto_Extra", typeof(int));
    
            var sub_Total_Precio_ProductoParameter = sub_Total_Precio_Producto.HasValue ?
                new ObjectParameter("Sub_Total_Precio_Producto", sub_Total_Precio_Producto) :
                new ObjectParameter("Sub_Total_Precio_Producto", typeof(decimal));
    
            var cantidad_PersonasParameter = cantidad_Personas.HasValue ?
                new ObjectParameter("Cantidad_Personas", cantidad_Personas) :
                new ObjectParameter("Cantidad_Personas", typeof(int));
    
            var nota_ProductoParameter = nota_Producto != null ?
                new ObjectParameter("Nota_Producto", nota_Producto) :
                new ObjectParameter("Nota_Producto", typeof(string));
    
            var hora_Orden_DetalleParameter = hora_Orden_Detalle.HasValue ?
                new ObjectParameter("Hora_Orden_Detalle", hora_Orden_Detalle) :
                new ObjectParameter("Hora_Orden_Detalle", typeof(System.DateTime));
    
            var codigo_Estado_Orden_DetalleParameter = codigo_Estado_Orden_Detalle.HasValue ?
                new ObjectParameter("Codigo_Estado_Orden_Detalle", codigo_Estado_Orden_Detalle) :
                new ObjectParameter("Codigo_Estado_Orden_Detalle", typeof(int));
    
            var codigo_UsuarioParameter = codigo_Usuario.HasValue ?
                new ObjectParameter("Codigo_Usuario", codigo_Usuario) :
                new ObjectParameter("Codigo_Usuario", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_SET_ORDENDETALLE_Result>("SPC_SET_ORDENDETALLE", codigo_Orden_DetalleParameter, codigo_OrdenParameter, codigo_ProductoParameter, codigo_Producto_Unidad_MedidaParameter, cantidad_ProductoParameter, codigo_Producto_ExtraParameter, sub_Total_Precio_ProductoParameter, cantidad_PersonasParameter, nota_ProductoParameter, hora_Orden_DetalleParameter, codigo_Estado_Orden_DetalleParameter, codigo_UsuarioParameter, activoParameter);
        }
    
        public virtual int SPC_SET_PERFIL(Nullable<int> codigo_Perfil, string perfil, Nullable<bool> activo)
        {
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("Perfil", perfil) :
                new ObjectParameter("Perfil", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_PERFIL", codigo_PerfilParameter, perfilParameter, activoParameter);
        }
    
        public virtual int SPC_SET_PERMISOSPERFILES(Nullable<int> codigo_Perfil_Permiso, Nullable<int> codigo_Perfil, Nullable<int> codigo_Permiso, Nullable<bool> activo)
        {
            var codigo_Perfil_PermisoParameter = codigo_Perfil_Permiso.HasValue ?
                new ObjectParameter("Codigo_Perfil_Permiso", codigo_Perfil_Permiso) :
                new ObjectParameter("Codigo_Perfil_Permiso", typeof(int));
    
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var codigo_PermisoParameter = codigo_Permiso.HasValue ?
                new ObjectParameter("Codigo_Permiso", codigo_Permiso) :
                new ObjectParameter("Codigo_Permiso", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_PERMISOSPERFILES", codigo_Perfil_PermisoParameter, codigo_PerfilParameter, codigo_PermisoParameter, activoParameter);
        }
    
        public virtual int SPC_SET_PRODUCTO(Nullable<int> codigo_Producto, Nullable<int> codigo_Categoria_Producto, string producto, byte[] imagenProducto, Nullable<decimal> precioVenta, Nullable<int> ordenProducto, Nullable<int> codigo_Tipo_Producto, Nullable<decimal> precioComoExtra, Nullable<bool> aceptaExtra, Nullable<bool> impresora, Nullable<bool> activo)
        {
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_Categoria_ProductoParameter = codigo_Categoria_Producto.HasValue ?
                new ObjectParameter("Codigo_Categoria_Producto", codigo_Categoria_Producto) :
                new ObjectParameter("Codigo_Categoria_Producto", typeof(int));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var imagenProductoParameter = imagenProducto != null ?
                new ObjectParameter("ImagenProducto", imagenProducto) :
                new ObjectParameter("ImagenProducto", typeof(byte[]));
    
            var precioVentaParameter = precioVenta.HasValue ?
                new ObjectParameter("PrecioVenta", precioVenta) :
                new ObjectParameter("PrecioVenta", typeof(decimal));
    
            var ordenProductoParameter = ordenProducto.HasValue ?
                new ObjectParameter("OrdenProducto", ordenProducto) :
                new ObjectParameter("OrdenProducto", typeof(int));
    
            var codigo_Tipo_ProductoParameter = codigo_Tipo_Producto.HasValue ?
                new ObjectParameter("Codigo_Tipo_Producto", codigo_Tipo_Producto) :
                new ObjectParameter("Codigo_Tipo_Producto", typeof(int));
    
            var precioComoExtraParameter = precioComoExtra.HasValue ?
                new ObjectParameter("PrecioComoExtra", precioComoExtra) :
                new ObjectParameter("PrecioComoExtra", typeof(decimal));
    
            var aceptaExtraParameter = aceptaExtra.HasValue ?
                new ObjectParameter("AceptaExtra", aceptaExtra) :
                new ObjectParameter("AceptaExtra", typeof(bool));
    
            var impresoraParameter = impresora.HasValue ?
                new ObjectParameter("Impresora", impresora) :
                new ObjectParameter("Impresora", typeof(bool));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_PRODUCTO", codigo_ProductoParameter, codigo_Categoria_ProductoParameter, productoParameter, imagenProductoParameter, precioVentaParameter, ordenProductoParameter, codigo_Tipo_ProductoParameter, precioComoExtraParameter, aceptaExtraParameter, impresoraParameter, activoParameter);
        }
    
        public virtual int SPC_SET_PRODUCTOSUNIDADESMEDIDAS(Nullable<int> codigo_Producto_Unidad_Medida, Nullable<int> codigo_Producto, Nullable<int> codigo_Unidad_Medida, Nullable<decimal> precio_Venta, Nullable<bool> activo)
        {
            var codigo_Producto_Unidad_MedidaParameter = codigo_Producto_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Producto_Unidad_Medida", codigo_Producto_Unidad_Medida) :
                new ObjectParameter("Codigo_Producto_Unidad_Medida", typeof(int));
    
            var codigo_ProductoParameter = codigo_Producto.HasValue ?
                new ObjectParameter("Codigo_Producto", codigo_Producto) :
                new ObjectParameter("Codigo_Producto", typeof(int));
    
            var codigo_Unidad_MedidaParameter = codigo_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Unidad_Medida", codigo_Unidad_Medida) :
                new ObjectParameter("Codigo_Unidad_Medida", typeof(int));
    
            var precio_VentaParameter = precio_Venta.HasValue ?
                new ObjectParameter("Precio_Venta", precio_Venta) :
                new ObjectParameter("Precio_Venta", typeof(decimal));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_PRODUCTOSUNIDADESMEDIDAS", codigo_Producto_Unidad_MedidaParameter, codigo_ProductoParameter, codigo_Unidad_MedidaParameter, precio_VentaParameter, activoParameter);
        }
    
        public virtual int SPC_SET_UNIDADESMEDIDAS(Nullable<int> codigo_Unidad_Medida, string unidad_Medida, string abreviatura, Nullable<bool> activo)
        {
            var codigo_Unidad_MedidaParameter = codigo_Unidad_Medida.HasValue ?
                new ObjectParameter("Codigo_Unidad_Medida", codigo_Unidad_Medida) :
                new ObjectParameter("Codigo_Unidad_Medida", typeof(int));
    
            var unidad_MedidaParameter = unidad_Medida != null ?
                new ObjectParameter("Unidad_Medida", unidad_Medida) :
                new ObjectParameter("Unidad_Medida", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_UNIDADESMEDIDAS", codigo_Unidad_MedidaParameter, unidad_MedidaParameter, abreviaturaParameter, activoParameter);
        }
    
        public virtual int SPC_SET_USUARIO(Nullable<int> codigo_Usuario, Nullable<int> codigo_Perfil, string usuario, string clave, string nombre_Usuario, string apellido_Usuario, Nullable<bool> activo)
        {
            var codigo_UsuarioParameter = codigo_Usuario.HasValue ?
                new ObjectParameter("Codigo_Usuario", codigo_Usuario) :
                new ObjectParameter("Codigo_Usuario", typeof(int));
    
            var codigo_PerfilParameter = codigo_Perfil.HasValue ?
                new ObjectParameter("Codigo_Perfil", codigo_Perfil) :
                new ObjectParameter("Codigo_Perfil", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var apellido_UsuarioParameter = apellido_Usuario != null ?
                new ObjectParameter("Apellido_Usuario", apellido_Usuario) :
                new ObjectParameter("Apellido_Usuario", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_USUARIO", codigo_UsuarioParameter, codigo_PerfilParameter, usuarioParameter, claveParameter, nombre_UsuarioParameter, apellido_UsuarioParameter, activoParameter);
        }
    
        public virtual int SPC_SET_INFORMACIONEMPRESA(string nombreEmpresa, string direccion, string codigoPostal, string provincia, string ciudad, string pais, string cIF, string nIF, string telefono, string movil, string facebook, string nombreImpresoraBarra, string nombreImpresoraCocina, Nullable<decimal> porcientoIVA, string tipoLetraBarra, string tipoLetraCocina, Nullable<decimal> tamanoLetraBarra, Nullable<decimal> tamanoLetraCocina, string plantillaPedidoBarra, string plantillaPedidoCocina, string plantillaAnulacionBarra, string plantillaCuenta)
        {
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("NombreEmpresa", nombreEmpresa) :
                new ObjectParameter("NombreEmpresa", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var cIFParameter = cIF != null ?
                new ObjectParameter("CIF", cIF) :
                new ObjectParameter("CIF", typeof(string));
    
            var nIFParameter = nIF != null ?
                new ObjectParameter("NIF", nIF) :
                new ObjectParameter("NIF", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var movilParameter = movil != null ?
                new ObjectParameter("Movil", movil) :
                new ObjectParameter("Movil", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var nombreImpresoraBarraParameter = nombreImpresoraBarra != null ?
                new ObjectParameter("NombreImpresoraBarra", nombreImpresoraBarra) :
                new ObjectParameter("NombreImpresoraBarra", typeof(string));
    
            var nombreImpresoraCocinaParameter = nombreImpresoraCocina != null ?
                new ObjectParameter("NombreImpresoraCocina", nombreImpresoraCocina) :
                new ObjectParameter("NombreImpresoraCocina", typeof(string));
    
            var porcientoIVAParameter = porcientoIVA.HasValue ?
                new ObjectParameter("PorcientoIVA", porcientoIVA) :
                new ObjectParameter("PorcientoIVA", typeof(decimal));
    
            var tipoLetraBarraParameter = tipoLetraBarra != null ?
                new ObjectParameter("TipoLetraBarra", tipoLetraBarra) :
                new ObjectParameter("TipoLetraBarra", typeof(string));
    
            var tipoLetraCocinaParameter = tipoLetraCocina != null ?
                new ObjectParameter("TipoLetraCocina", tipoLetraCocina) :
                new ObjectParameter("TipoLetraCocina", typeof(string));
    
            var tamanoLetraBarraParameter = tamanoLetraBarra.HasValue ?
                new ObjectParameter("TamanoLetraBarra", tamanoLetraBarra) :
                new ObjectParameter("TamanoLetraBarra", typeof(decimal));
    
            var tamanoLetraCocinaParameter = tamanoLetraCocina.HasValue ?
                new ObjectParameter("TamanoLetraCocina", tamanoLetraCocina) :
                new ObjectParameter("TamanoLetraCocina", typeof(decimal));
    
            var plantillaPedidoBarraParameter = plantillaPedidoBarra != null ?
                new ObjectParameter("PlantillaPedidoBarra", plantillaPedidoBarra) :
                new ObjectParameter("PlantillaPedidoBarra", typeof(string));
    
            var plantillaPedidoCocinaParameter = plantillaPedidoCocina != null ?
                new ObjectParameter("PlantillaPedidoCocina", plantillaPedidoCocina) :
                new ObjectParameter("PlantillaPedidoCocina", typeof(string));
    
            var plantillaAnulacionBarraParameter = plantillaAnulacionBarra != null ?
                new ObjectParameter("PlantillaAnulacionBarra", plantillaAnulacionBarra) :
                new ObjectParameter("PlantillaAnulacionBarra", typeof(string));
    
            var plantillaCuentaParameter = plantillaCuenta != null ?
                new ObjectParameter("PlantillaCuenta", plantillaCuenta) :
                new ObjectParameter("PlantillaCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPC_SET_INFORMACIONEMPRESA", nombreEmpresaParameter, direccionParameter, codigoPostalParameter, provinciaParameter, ciudadParameter, paisParameter, cIFParameter, nIFParameter, telefonoParameter, movilParameter, facebookParameter, nombreImpresoraBarraParameter, nombreImpresoraCocinaParameter, porcientoIVAParameter, tipoLetraBarraParameter, tipoLetraCocinaParameter, tamanoLetraBarraParameter, tamanoLetraCocinaParameter, plantillaPedidoBarraParameter, plantillaPedidoCocinaParameter, plantillaAnulacionBarraParameter, plantillaCuentaParameter);
        }
    
        public virtual ObjectResult<SPC_GET_INFORMACIONEMPRESA_Result> SPC_GET_INFORMACIONEMPRESA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPC_GET_INFORMACIONEMPRESA_Result>("SPC_GET_INFORMACIONEMPRESA");
        }
    }
}
